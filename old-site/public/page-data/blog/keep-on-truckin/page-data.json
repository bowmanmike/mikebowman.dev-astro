{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/keep-on-truckin/","result":{"data":{"post":{"frontmatter":{"slug":"keep-on-truckin","title":"Keep on Truckin'","date":"2016-04-23"},"html":"<p>Hello! I'm still here! Never fear, dear reader, I'd never abandon you. I've been\nmeaning to do this post for a little while, so here we go.</p>\n<p>It's been a month and a day since the demo night at Bitmaker where we got to\nshow off <a href=\"https://chortal.herokuapp.com\">chortal</a> to the world at large. It's\none of those things where it feels like it was ages ago but also like,\nyesterday. So what have I been doing with myself?</p>\n<p>As I wrote about last time (I think), after the demo night came \"Hiring Week\". I\nhad a bunch of interviews, and even a second round interview, but nothing panned\nout, unfortunately. It was a cool experience, and interviewing itself is a\nvaluable experience. It's good to get some insight into what employers are\nlooking for in developers, and into the techniques and strategies they use to\ntry and find those developers. The interviews were pretty unremarkable from what\nI saw, but some of my classmates had things pretty different. Mine were mostly\nstandard interview questions with some technical stuff mixed in. One company I\ninterviewed with gave me a rapid-fire series of technical questions, escalating\nin difficulty, until I couldn't answer any more. That was kinda fun, if a bit\nstressful. They also gave me a short (10 minute) written test about Ruby, which\nI found pretty straightforward. Another company had me walk them through my\nfinal project and quizzed me on features and design decisions we made while we\nwere working on it. Most recently I had a company give me a kind of homework\nassignment to take home and submit in a few days. A friend of mine had a 20-page\nmultiple choice test, and some others had a 3+ hour interview where they had to\nbuild a game in Javascript, or write code on the spot. So there's a pretty big\nrange, which is interesting. Some companies make decisions pretty quickly,\nothers seem to want to have candidates come in again and again to talk to\ndifferent people about different things. It's hard to predict, but it keeps\nthings pretty interesting.</p>\n<p>I can hear it coming. The big question. \"But do you have a job yet?!\" And the\nanswer, dear reader, is, unfortunately, not yet. I had an interview a few weeks\nago that I was optimistic about, but it fell through. I had another interview\nlast week that I'm again, optimistic about, but I'm trying not to get too ahead\nof myself. Cautious optimism is the name of the game. A couple of my friends\nhave gotten jobs so far though, so I figure it's just a matter of time. Finding\nthe right place and the right company at the right time. It seems like there's a\ngood amount of luck involved, but I think that's the way it is with jobs in\ngeneral.</p>\n<p>So what have I been doing for the past month, apart from interviewing? Trying\nhard to keep my coding chops up. I've spent some time learning\n<a href=\"http://backbonejs.org\">BackboneJS</a>, a front-end javascript framework. It's\nkinda fallen out of fashion, but it was recommended to me as a good first\nframework to learn because it's pretty lightweight and \"unopinionated\", as we\nlike to say. By that, I mean it lets you kinda work with it however you see fit,\nrather than forcing you into certain conventions that might make things more\ncomplex than they need to be. Backbone is kinda fun, and I could definitely see\nthe use for it, even if, for me, it ends up being a stepping stone towards\nlearning a more modern framework like <a href=\"http://emberjs.com\">Ember</a> or the \"new\nhotness\", <a href=\"https://facebook.github.io/react/\">React</a>.</p>\n<p>I've also been taking an online intro to computer science course.\n<a href=\"http://cs50.edx.org\">cs50</a> is the intro to computer science course offered at\nHarvard. It's meant for anyone who wants a base in CS, regardless of your major.\nIt's free online, has great reviews, and is hugely popular, both at Harvard and\nonline. It's been great so far (not that I'm very far into it) for filling in\nthe basic, fundamental concepts of computer science that you don't learn at a\nbootcamp. Things like how does the computer actually allocate memory to\naccomplish tasks. How does an array work, for example. It also covers various\nalgorithms used commonly in CS. Ruby is a high-level, developer-friendly,\nabstract language, so it comes with things like a <em>sort</em> method. <em>Sort</em> takes an\narray, like <code class=\"language-text\">[1, 5, 3, 7, 4, 9]</code> for example, and sorts them, lowest to\nhighest, so you end up with <code class=\"language-text\">[1, 3, 4, 5, 7, 9]</code>. Obviously, this is super\nuseful. There's lots of cases where you might want to sort a series of numbers.\nBut how do you actually do that? That's what cs50 is teaching right now.</p>\n<p>It's really interesting so far, largely because of the programming languages\nused to teach the course. I learned Ruby and Javascript. Ruby, as I mentioned in\na previous post, is actually written in another language, called C. C is a\nserious, low-level language. For example, parts of various operating systems are\nwritten in C. It's a totally different language from Ruby, and that's what they\nuse to teach the first portion of cs50. So instead of just using the <em>sort</em>\nmethod like in Ruby, the challenge is to actually write a function that can sort\nan array. I'm basically writing the Ruby <em>sort</em> method, which is cool. It's fun\nto try to solve programming challenges in such a different environment. I can\ngenerally figure out pretty easily the steps needed to solve the problem, but\nimplementing it is much trickier in C than Ruby.</p>\n<p>Later in the course they shift gears and teach some basic web development using\nPHP, which is an older language that powers a huge portion of things on the\ninternet. It gets a bad rep among developers, but it's been around forever\n(Wordpress, for example, is all PHP), and it's a super employable skill. As a\ndeveloper, being a programming polyglot is never a bad thing. The webdev\nprojects in cs50 seem like things I could do with Rails already, but it'll be\ninteresting to see how a different language will handle things.</p>\n<p>All in all, life post-Bitmaker has been a bit strange. Days and days of\nunstructured free time, very few obligations, with occasional peaks of\nhigh-focus, high-intensity interviews. I think I've managed to keep myself\npretty well occupied, and so I guess there's not much to do but keep on\ntruckin'. Until next time, dear reader, and may the force be with you.</p>"}},"pageContext":{"slug":"keep-on-truckin","prevPost":{"slug":"intro-to-git","title":"Intro to Git"},"nextPost":{"slug":"cleaning-up-conditionals-with-send","title":"Cleaning Up Conditionals with Send"},"title":"Keep on Truckin'"}},"staticQueryHashes":["2310292891","63159454"]}